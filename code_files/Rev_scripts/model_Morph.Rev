###########################################
# Binary morphological substitution model #
###########################################

#Set up Gamma-distributed rate variation.
alpha_morpho ~ dnExponential( 1.0 )
rates_morpho := fnDiscretizeGamma( alpha_morpho, alpha_morpho, 4 )

#Moves on the parameters to the Gamma distribution.
moves.append(mvScale(alpha_morpho, lambda=0.01, weight=5.0))
moves.append(mvScale(alpha_morpho, lambda=0.1,  weight=3.0))
moves.append(mvScale(alpha_morpho, lambda=1,    weight=1.0))

# We assume a strict morphological clock rate, drawn from an exponential prior #
clock_morpho ~ dnExponential(10.0)

moves.append(mvScale(clock_morpho, lambda=0.01, weight=4.0))
moves.append(mvScale(clock_morpho, lambda=0.1,  weight=4.0))
moves.append(mvScale(clock_morpho, lambda=1,    weight=4.0))

### Create the substitution model and clamp with our observed Standard data ###
# We also condition on observing only variable characters using coding="variable" #

morpho_bystate[1] <- morpho
idx = 1
for (i in 2:4) {
	# make local tmp copy of data
	# only keep character blocks with state space equal to size i
	morpho_bystate[i] <- morpho
	morpho_bystate[i].setNumStatesPartition(i)
	# get number of characters per character size wth i-sized states
	nc = morpho_bystate[i].nchar()

	# for non-empty character blocks
	if (nc > 0) {
		# make i-by-i rate matrix
		q[idx] <- fnJC(i)
		# create model of evolution for the character block
		phyMorpho[idx] ~ dnPhyloCTMC( tree=fbd_tree, Q=q[idx], nSites=nc, siteRates=rates_morpho, 
									branchRates=clock_morpho, type="Standard", coding="variable")

		# attach the data
		phyMorpho[idx].clamp(morpho_bystate[i])
		idx += 1
	}
}
